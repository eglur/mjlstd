import numpy as np

N = 3

# Number of rows in the state array (or vector)
n = 2

# Number of columns in the state array (`1', if it is a vector)
m = 1

# Transition probabilities
P = np.array([[0.67, 0.17, 0.16],
              [0.30, 0.47, 0.23],
              [0.26, 0.10, 0.64]])

A = np.array([[[0, 1], [-2.5, 3.2]],
              [[0, 1], [-4.3, 4.5]],
              [[0, 1], [5.3, -5.2]]])

B = np.array([np.array([[0], [1]]) for i in range(3)])

C = np.array([[[1.8974, -2.0028], [0, 0.9268], [0, 0]],
              [[3.1623, -0.9487], [0, 2.6646], [0, 0]],
              [[2.2361, -2.0125], [0, 0.6708], [0, 0]]])

D = np.array([[[0], [0], [np.sqrt(2.6)]],
              [[0], [0], [np.sqrt(1.165)]],
              [[0], [0], [np.sqrt(10./9)]]])

# Calculated by Riccati
X = np.array([[[18.66177577, -18.95610168],
               [-18.95610168, 28.10885744]],
              [[30.88198653, -21.60107817],
               [-21.60107817, 36.27417714]],
              [[35.42062478, -38.6164977],
               [-38.6164977, 49.71203005]]])

# Calculated using X_ric above
F = np.array([[[2.31717677, -2.33169061]],
              [[4.168449, -3.71314585]],
              [[-5.16574215, 5.79334185]]])
