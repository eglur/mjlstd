import numpy as np

N = 3

# Transition probabilities
P = np.array([[0.67, 0.17, 0.16],
              [0.30, 0.47, 0.23],
              [0.26, 0.10, 0.64]])

As = np.array([[[0, 1], [-2.5, 3.2]],
               [[0, 1], [-43.7, 45.4]],
               [[0, 1], [5.3, -5.2]]])

Bs = np.array([np.array([[0], [1]]) for i in range(3)])

Cs = np.array([[[1.8974, -2.0028], [0, 0.9268], [0, 0]],
               [[3.1623, -0.9487], [0, 2.6646], [0, 0]],
               [[2.2361, -2.0125], [0, 0.6708], [0, 0]]])

Ds = np.array([[[0], [0], [np.sqrt(2.6)]],
               [[0], [0], [np.sqrt(1.165)]],
               [[0], [0], [np.sqrt(10./9)]]])

# Optimal control gains
F_opt = np.array([[[2.4854, -2.2734]],
                  [[43.655, -44.401]],
                  [[-5.2799, 6.0555]]])

# Some suboptimal control gains
F_sub = np.array([[[2.57, 2.2734]],
                  [[43.655, -44.401]],
                  [[-5.2799, 6.0555]]])

# CARE solution
X_opt = np.array([[[18.6616, -18.9560], [-18.9560, 28.1085]],
                  [[30.8818, -21.6010], [-21.6010, 36.2739]],
                  [[35.4175, -38.6129], [-38.6129, 36.2739]]])
